{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","classNames","href","onClick","title","content","App","state","currentTab","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"uOASaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAEhD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKM,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBACEE,UAAWE,IACT,GACA,CACE,YAAaR,IAAkBI,EAAIC,KAGvC,UAAQ,MAPV,SAUE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,WACHV,IAAkBI,EAAIC,IACxBJ,EAAcG,IALpB,SASGA,EAAIO,SAXFP,EAAIC,WAmBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,GAAeA,EAAYU,cC1CvBb,EAAO,CAClB,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAO7BC,EAAb,4MACEC,MAAe,CACbZ,YAAaH,EAAK,IAFtB,EAKEE,cAAgB,SAACc,GACf,EAAKC,SAAS,CAAEd,YAAaa,KANjC,4CASE,WACE,IAAQb,EAAgBe,KAAKH,MAArBZ,YAER,OACE,sBAAKI,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBJ,EAAYS,SAGlC,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAAeE,EAAYG,GAC3BJ,cAAegB,KAAKhB,uBArB9B,GAAyBiB,aCdzBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6634dfcc.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected:(currentTab: Tab)=> void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={classNames(\n                '',\n                {\n                  'is-active': selectedTabId === tab.id,\n                },\n              )}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (selectedTabId !== tab.id) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab && selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ntype State = {\n  selectedTab: Tab,\n};\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    selectedTab: tabs[0],\n  };\n\n  onTabSelected = (currentTab: Tab) => {\n    this.setState({ selectedTab: currentTab });\n  };\n\n  render() {\n    const { selectedTab } = this.state;\n\n    return (\n      <div className=\"section\">\n        <h1 className=\"title\">\n          {`Selected tab is ${selectedTab.title}`}\n        </h1>\n\n        <Tabs\n          tabs={tabs}\n          selectedTabId={selectedTab.id}\n          onTabSelected={this.onTabSelected}\n        />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}